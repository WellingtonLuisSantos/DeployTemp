@model IEnumerable<CORE.BackOffice.UI.ViewModels.Funcionario.DependenteViewModel>

@{
    ViewBag.Title = "Administração - Gestão";
    Layout = null;
}

    <div class="form-horizontal">
        <div class="form-group">
            <div class="col-sm-1 col-md-1">
                <input id="IdDependente" type="text" disabled class="form-control" />
            </div>
            <div class="col-sm-4 col-md-4">
                <input id="NmDependente" type="text" placeholder="Digite o nome" class="form-control" />
            </div>
            <div class="col-sm-3 col-md-3">
                <input id="CpfDependente" type="text" placeholder="Cpf" class="form-control cpfField" />
            </div>
            <div class="col-sm-2 col-md-2">
                <input id="DtNascDependente" type="text" placeholder="Data de nascimento" class="form-control dateField" />
            </div>
            <div class="col-sm-2 col-md-2">
                <input id="GrauParestescoDependente" type="text" placeholder="Parentesco" class="form-control" />
            </div>
        </div>
            <div class="form-group">
                <div class="col-sm-12 col-md-12">
                    <input type="button" value="Salvar" class="btn btn-success" onclick="IncluirDependente();" />
                </div>
            </div>
        </div>
        <div class="panel panel-visible" id="spy6">
            <div class="panel-body pn">
                <table width="100%" class="table .table-striped" id="datatable8" cellspacing="0">
                    <thead>
                        <tr class="success">
                            <th>
                                @Html.DisplayNameFor(model => model.FirstOrDefault().Nome)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.FirstOrDefault().NrCPF)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.FirstOrDefault().DtNascimento)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.FirstOrDefault().Parentesco)
                            </th>
                            @*<th></th>*@
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="tbody-dependente">
                        @foreach (var item in Model)
                        {
                            <tr class="line-dependente" id="data-id-line-dependente-@item.IdDependente" identificacao-dependente="@item.IdDependente">
                                <td id="data-id-line-dependente-nome-@item.IdDependente">
                                    @item.Nome
                                </td>
                                <td id="data-id-line-dependente-nrcpf-@item.IdDependente">
                                    @item.NrCPF
                                </td>
                                <td id="data-id-line-dependente-dtnascimento-@item.IdDependente">
                                    @item.DtNascimento.ToString("dd/MM/yyyy")
                                </td>
                                <td id="data-id-line-dependente-parentesco-@item.IdDependente">
                                    @item.Parentesco
                                </td>
                                <td>
                                    <label class="btn-excluir-dependente btn btn-danger" data-id-item="@item.IdDependente">Deletar</label>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        </div>

        <style>
            .line-dependente:hover {
                background-color: #70ca63;
                color: white;
            }
        </style>

        <script src="~/Scripts/jquery.confirm-2.6.1/jquery.confirm.js"></script>

        <script>


    $(document).ready(function () {

        addevent();
        addEventoEditDependencia();

    });

    function addEventoEditDependencia() {
        $(".line-dependente").click(function (button) {
            var id = $(this).attr('identificacao-dependente').trim();

            $('#IdDependente').val(id);
            $('#NmDependente').val($('#data-id-line-dependente-nome-' + id).text().trim());
            $('#CpfDependente').val($('#data-id-line-dependente-nrcpf-' + id).text().trim());
            $('#DtNascDependente').val($('#data-id-line-dependente-dtnascimento-' + id).text().trim());
            $('#GrauParestescoDependente').val($('#data-id-line-dependente-parentesco-' + id).text().trim());
        });
    }

    function addevent()
    {
        $(".btn-excluir-dependente").confirm({
            title: "Excluir Dependente",
            text: "Você deseja excluir este dependente?",
            confirm: function (button) {

                ExcluirDependente($(button).attr('data-id-item'));

            },
            cancel: function (button) {

            },
            confirmButton: "Sim",
            cancelButton: "Não"
        });
    }

    function DependenteEhValido() {

        if ($.trim($("#NmDependente").val()) === '') {
            showNotification('Dependente', "O Nome do dependente é obrigatório", 'warning')
            return;
        }

        if ($.trim($("#CpfDependente").val()) != '' && !CPFValido($.trim($("#CpfDependente").val()))) {
            showNotification('Dependente', "O CPF do dependente é inválido", 'warning')
            return;
        }

        //console.log(moment($.trim($("#DtNascDependente").val()), "DD/MM/YYYY", true).isValid());

        if (!moment($.trim($("#DtNascDependente").val()), "DD/MM/YYYY", true).isValid()) {
            showNotification('Dependente', "Informe a Data de Nascimento do dependente", 'warning')
            return;
        }

        if ($.trim($("#GrauParestescoDependente").val()) === '') {
            showNotification('Dependente', "Informe o Grau de Parentesco", 'warning')
            return;
        }

        return true;
    }

    function IncluirDependente() {

        if (!DependenteEhValido()) return;

        var dataObject = JSON.stringify({
            'IdDependente': $("#IdDependente").val(),
            'IdFuncionario': $("#IdFuncionario").val(),
            'Nome': $("#NmDependente").val(),
            'NrCPF': $("#CpfDependente").val(),
            'DtNascimento': $("#DtNascDependente").val(),
            'Parentesco':  $("#GrauParestescoDependente").val()
        });

        if ($.trim(dataObject.Nome) === '') {

        }

        $.ajax({
            url: '@Url.Action("IncluirDependente")',
            type: 'POST',
            contentType: 'application/json',
            data: dataObject,
            success: function (response) {

               if (response.Status == 'Success') {

                   $("#data-id-line-dependente-" + response.Obj.IdDependente).remove();
                   $("#tbody-dependente").append('<tr class="line-dependente" id="data-id-line-dependente-' + response.Obj.IdDependente + '" identificacao-dependente="' + response.Obj.IdDependente + '"><td id="data-id-line-dependente-nome-' + response.Obj.IdDependente + '">' + response.Obj.Nome + '</td><td id="data-id-line-dependente-nrcpf-' + response.Obj.IdDependente + '">' + response.Obj.NrCPF + '</td><td id="data-id-line-dependente-dtnascimento-' + response.Obj.IdDependente + '">' + $("#DtNascDependente").val() + '</td><td id="data-id-line-dependente-parentesco-' + response.Obj.IdDependente + '">' + response.Obj.Parentesco + '</td><td><label class="btn-excluir-documento btn btn-danger" data-id-item="' + response.Obj.IdDependente + '">Deletar</label></td></tr>');

                   $("#IdDependente").val('');
                   $("#NmDependente").val('');
                   $("#CpfDependente").val('');
                   $("#DtNascDependente").val('');
                   $("#GrauParestescoDependente").val('');
                   addevent();
                   addEventoEditDependencia();
                   showNotification(response.Title, response.Message, 'success');
                }
                else if (response.Status == 'Warning') {
                    showNotification(response.Title, response.Message, 'warning');
                }
                else if (response.Status == 'Error') {
                    showNotification(response.Title, response.Message, 'danger');
                }
                else {
                    alert("Status de retorno não tratado!");
                }

            },
            error: function (data) {
                alert("Error Submit");
            }
        });

    }

    function ExcluirDependente(id) {

        var dataObject = JSON.stringify({'ID': id});

        $.ajax({
            url: '@Url.Action("DeleteDependente")',
            type: 'POST',
            contentType: 'application/json',
            data: dataObject,
            success: function (response) {

                if (response.Status == 'Success') {
                    $("#data-id-line-dependente-" + id).remove();
                    $("#IdDependente").val('');
                    $("#NmDependente").val('');
                    $("#CpfDependente").val('');
                    $("#DtNascDependente").val('');
                    $("#GrauParestescoDependente").val('');
                    showNotification(response.Title, response.Message, 'success');
                }
                else if (response.Status == 'Warning') {
                    showNotification(response.Title, response.Message, 'warning');
                }
                else if (response.Status == 'Error') {
                    showNotification(response.Title, response.Message, 'danger');
                }
                else {
                    alert("Status de retorno não tratado!");
                }

            },
            error: function (data) {
                alert("Error Submit");
            }
        });

    }

        </script>
